{"data":{"site":{"siteMetadata":{"author":{"name":"kim beom gyu","contacts":{"twitter":"#"}},"disqusShortname":"","subtitle":"Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed arcu.","title":"Blog by kimbeomgyu","url":"https://lumen.netlify.com"}},"markdownRemark":{"id":"a283aafa-4454-53fd-854c-f02b9837f58a","html":"<h2 id=\"목표\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목표</h2>\n<h4 id=\"server-get-post-조작하기\"><a href=\"#server-get-post-%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"server get post 조작하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>server get, post 조작하기</h4>\n<h4 id=\"database-공부하기\"><a href=\"#database-%EA%B3%B5%EB%B6%80%ED%95%98%EA%B8%B0\" aria-label=\"database 공부하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>database 공부하기</h4>\n<h4 id=\"npm-이해하기\"><a href=\"#npm-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-label=\"npm 이해하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm 이해하기</h4>\n<hr>\n<h6 id=\"express-에서-server-get-post-조작하기\"><a href=\"#express-%EC%97%90%EC%84%9C-server-get-post-%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"express 에서 server get post 조작하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>express 에서 server get, post 조작하기</h6>\n<p><code class=\"language-text\">npm install --save express</code></br>\n<code class=\"language-text\">npm install --save mysql</code></br></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> mysql <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mysql'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Got a POST request'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Example app listening on port 3000!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>get은 body를 작성할수 없다.</p>\n<p>post는 body를 작성해서 받아올수 있다.</p>\n<p>로그인 및 회원가입 처럼 데이터가 오가는 것은 post를 이용한다.</p>\n<hr>\n<p>서버를 다루다가 서버가 꺼지지 않고 계속 동작해서 테스트를 돌릴 수가 없을 때가 있었다.</p>\n<p><code class=\"language-text\">lsof -i:[포트번호]</code> 를 이용해서 적어넣은 포트번호가 실행되고 있는지를 확인한다.</p>\n<p><code class=\"language-text\">kill -9 [PID]</code> 실행되고 있다면 PID번호가 나오는데 적어 넣고 사용하면 강제종료된다.</p>\n<p>post를 보내려고 하다 보니 데이터를 담을곳과 꺼내올 곳이 필요해 데이터베이스를 공부했다.,…</p>\n<hr>\n<h6 id=\"database-공부하기-1\"><a href=\"#database-%EA%B3%B5%EB%B6%80%ED%95%98%EA%B8%B0-1\" aria-label=\"database 공부하기 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>database 공부하기</h6>\n<p>이전에 공부하긴 했지만 한번더 확인하고 정리해본다.</p>\n<p><code class=\"language-text\">mysql -u root -p;</code></p>\n<p>패스워드까지 입력하면 mysql에 들어간다.</p>\n<p><code class=\"language-text\">SHOW DATABASES;</code></p>\n<p>+--------------------+</br>\n| Database |</br>\n+--------------------+</br>\n| chat |</br>\n| information<em>schema |</br>\n| mysql |</br>\n| performance</em>schema |</br>\n| serverTest |</br>\n| sys |</br>\n+--------------------+</br></p>\n<p>데이터베이스들을 보여준다.</p>\n<p><code class=\"language-text\">USE test;</code></p>\n<p>해당 데이터베이스를 사용한다고 선언한다.</p>\n<p><code class=\"language-text\">CREATE TABLE test (내용)</code></p>\n<p>데이터베이스에서 테이블을 생성한다 내용에 입력한 내용들을 기준으로 칼럼을 만들어주고, 만든다.</p>\n<p><code class=\"language-text\">DESCRIBE test</code>;</p>\n<p>+-----------+---------------------+------+-----+---------+----------------+</br>\n| Field | Type | Null | Key | Default | Extra |</br>\n+-----------+---------------------+------+-----+---------+----------------+</br>\n| id | bigint(20) unsigned | NO | PRI | NULL | auto<em>increment |</br>\n| subject | varchar(255) | NO | | NULL | |</br>\n| content | mediumtext | YES | | NULL | |</br>\n| created | datetime | YES | | NULL | |</br>\n| user</em>id | int(10) unsigned | NO | | NULL | |</br>\n| user_name | varchar(32) | NO | | NULL | |</br>\n| hit | int(10) unsigned | NO | | 0 | |</br>\n+-----------+---------------------+------+-----+---------+----------------+</br></p>\n<p>테이블의 칼럼이 어떤 구조로 되어있는지 보여준다.</p>\n<p><code class=\"language-text\">SHOW TABLES;</code></p>\n<p>테이블들을 보여준다.</p>\n<p><code class=\"language-text\">INSERT INTO (table) (key) VALUES (value);</code></p>\n<p>테이블안에 칼럼을 기준으로 키,값으로 한줄한줄 적어 넣는다.</p>\n<p><code class=\"language-text\">SELECT * FROM test;</code></p>\n<p>테스트라는 테이블안에 내용을 모두 보여준다.</p>\n<p><code class=\"language-text\">SELECT * FROM test WHERE id &gt; 3;</code></p>\n<p>테스트라는 테이블안에 내용들중 id 가 3 이상인 것들만 보여준다.</p>\n<p><code class=\"language-text\">DROP TABLE test;</code></p>\n<p>테이블을 삭제한다.</p>\n<hr>\n<h6 id=\"npm-이해하기-1\"><a href=\"#npm-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-1\" aria-label=\"npm 이해하기 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm 이해하기</h6>\n<p>npm 은 nodejs생태계의 사람들이 모듈을 만들고 모아둔 앱스토어이다. 설정자체가 매우 복잡하기 때문에 설정하는 여러가지 모듈을 간단한 명령어로 받아오고 사용할수 있도록 도와준다.</p>\n<p>오늘 공부한 express는 서버를 만드는 것을 도와주는 모듈이다.</p>\n<p>mysql이라는 모듈은 mysql을 nodejs를 이용해서 mysql을 다룰수 있도록 도와준다.</p>\n<p>자주 사용하게 될 fs는 file system의 약자로 파일을 읽어오고 만들고 수정하는등 매우 유용하게 쓰이는 모듈이다.</p>\n<p>모듈은 <code class=\"language-text\">npm install (모듈)</code> 로 불러 올 수 있고, require를 이용해서 사용한다.</p>\n<p>받아온 모듈은 package.json에 dependencies부분에 담긴다. <code class=\"language-text\">npm install</code> 을 할때 사이에<code class=\"language-text\">--save</code>를 붙히면 기록이되어 파일을 다른사람이 받더라도 사용할 수 있게 된다. 붙히지 않으면 기록되지 않는다.</p>\n<hr>\n<p>오늘 시험본다고 공부를 많이 못했다. 아쉽다……</p>","fields":{"slug":"/posts/2/","tagSlugs":["/tag/til/","/tag/server/","/tag/post/","/tag/get/","/tag/database/","/tag/npm/","/tag/project-1/"]},"frontmatter":{"date":"2019-02-02T20:37:30.100Z","description":"서버를 이해하기 시작했다.","tags":["TIL","server","post","get","database","npm","project-1"],"title":"TIL-0202"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/2/"}}