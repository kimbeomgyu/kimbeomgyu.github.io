{"data":{"site":{"siteMetadata":{"author":{"name":"kim beom gyu","contacts":{"twitter":"#"}},"disqusShortname":"","subtitle":"반갑습니다. 신입 개발자 김범규입니다.","title":"Blog by kimbeomgyu","url":"https://kimbeomgyu.github.io"}},"markdownRemark":{"id":"e15771f6-e695-5f9e-9143-00babd3e3580","html":"<h2 id=\"한-일\"><a href=\"#%ED%95%9C-%EC%9D%BC\" aria-label=\"한 일 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 일</h2>\n<h4 id=\"mysql로-만든-db-nosqlmongodb로-변경\"><a href=\"#mysql%EB%A1%9C-%EB%A7%8C%EB%93%A0-db-nosqlmongodb%EB%A1%9C-%EB%B3%80%EA%B2%BD\" aria-label=\"mysql로 만든 db nosqlmongodb로 변경 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mysql로 만든 DB nosql(mongoDB)로 변경</h4>\n<h4 id=\"회의\"><a href=\"#%ED%9A%8C%EC%9D%98\" aria-label=\"회의 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회의</h4>\n<h4 id=\"kick-off-meeting\"><a href=\"#kick-off-meeting\" aria-label=\"kick off meeting permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kick off meeting</h4>\n<hr>\n<h6 id=\"회의-1\"><a href=\"#%ED%9A%8C%EC%9D%98-1\" aria-label=\"회의 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회의</h6>\n<p>프로젝트 팀 내부에서 회의를 했다. 간략하게 solo week 동안 무엇을 공부했는지 서로 공유하고, 어떻게 맞춰볼지를 토의했다.</p>\n<p>DB변경 제안이 나왔고, DB마다 장단점이 있어서 시도해보는 것도 좋을것 같고, 프로젝트와 소소하게 더 맞는 nosql로 변경했다.</p>\n<p>그리고 android studio와 expo의 차이점도 얘기를 나누고, AWS에서 어떤식으로 적용할지도 토의 했다.</p>\n<hr>\n<h6 id=\"kick-off-meeting-1\"><a href=\"#kick-off-meeting-1\" aria-label=\"kick off meeting 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kick off meeting</h6>\n<p>우리가 어떠한 방식으로 진행할지와 앞으로 어떤식으로 하면 좋을지 엔지니어님과 얘기를 나누었다. 우선 시도해보는 것에 매우 큰 중점을 두고 방향성만 잃지 않으면 된다고 말씀하셨다.</p>\n<ul>\n<li>\n<p>git 을 잘 활용해서 팀과 프로젝트를 하는지,</p>\n</li>\n<li>\n<p>TIL로 스스로 점검하는지</p>\n</li>\n<li>\n<p>Agile Scrum 방식을 적용해보는지,</p>\n</li>\n<li>\n<p>팀회고를 1주일에 한번정도는 꼭 해야할 것!</p>\n</li>\n<li>\n<p>기술적인 고민은 같이 할 것,</p>\n</li>\n<li>\n<p>merge하기 전에 코드를 리뷰하고 점검한 후에 할 것,</p>\n</li>\n<li>\n<p>토이문제에 너무 빠지지 말 것 등등</p>\n</li>\n</ul>\n<p>기본적인 것들만 유지하게끔 말씀해주셨다. 그리고 기대된다고 했다. ㅎ</p>\n<hr>\n<h6 id=\"db-설치변경\"><a href=\"#db-%EC%84%A4%EC%B9%98%EB%B3%80%EA%B2%BD\" aria-label=\"db 설치변경 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DB 설치/변경</h6>\n<p>아침에 회의를 하고 DB를 nosql로 변경하였다. JSON형식의 데이터베이스였고, 관계형데이터베이스에서는 5개의 테이블로 구성된 것을 몽고DB로 변경하니 2개의 콜렉션으로 바뀌었다. 바꾸는 과정에서 새로이 공부를 했고, 익히는데 시간도 많이들었다. 그리고 설치하고 환경설정을 하는데 시간을 투자하였다.</p>\n<p>brew를 이용해 한번에 설치하는것이 너무 쉽게 설치가 되어서 이상한 기분이였다. 이전에 windows에서는 DB설치할때 고생했는데…</p>\n<p>설치후에 어떠한 환경을 설정해주는데 너무 어렵게 생각하고 꼬아서 생각해버리는 바람에 시간을 날려버렸다. 그리고 액세스 컨트롤 어쩌구 하는 오류가 떠서 계속 찾아보고 수정해보려 했지만 잘 되지 않았다. 나중에 꼭 수정을 해보아야겠다. 그 후 공부하고 mongoose도 이용해서 nodejs로 설정하고 회원가입과 로그인을 다시 만들었다. 코드는 무척이나 짧아졌다.</p>\n<p>mongo DB\n자료 괜찮음 <a href=\"https://brunch.co.kr/@kooslab/181\">https://brunch.co.kr/@kooslab/181</a></p>\n<hr>\n<p><code class=\"language-text\">db</code> : 현재 db확인</p>\n<p><code class=\"language-text\">use &lt;database&gt;</code> : 사용할 db 설정</p>\n<p><code class=\"language-text\">SHOW dbs</code> : db목록 확인</p>\n<p><code class=\"language-text\">SHOW collections</code> : collection 목록을 확인</p>\n<p><code class=\"language-text\">db.dropDatabase()</code> : 데이터베이스를 제거</p>\n<p><code class=\"language-text\">db.createCollection(&lt;name&gt;,&lt;options&gt;)</code> : collection을 생성</p>\n<p><code class=\"language-text\">db.&lt;collection&gt;.insert({&quot;&lt;key&gt;&quot;:&quot;&lt;value&gt;&quot;})</code> : 맞는 값을 넣기</p>\n<p><code class=\"language-text\">db.&lt;collection&gt;.drop()</code> : collection 을 제거</p>\n<p><code class=\"language-text\">db.&lt;collection&gt;.remove({조건})</code> : 조건이 충족되는 것들만 제거</p>\n<hr>\n<p><code class=\"language-text\">db.&lt;collection&gt;.find()</code> : collection 안에 내용을 확인</p>\n<ul>\n<li>\n<p>조회하는 조건들이 다양하다. 뒤에 .pretty() 를 붙히면 보기 편하게(예쁘게)바뀐다.</p>\n</li>\n<li>\n<p>find({’<key>’:’<value>’})를 사용하면 조건에 맞게 선택된다.</p>\n</li>\n<li>\n<p>find({”<key>”:{$lte:”<value>”}})를 사용하면 less than 을 의미하고 value 의 이하인것들만 선택한다.</p>\n</li>\n</ul>\n<p>$eq === value</p>\n<p>$gt > value</p>\n<p>$gte >= value</p>\n<p>$lt &#x3C; value</p>\n<p>$lte &#x3C;= value</p>\n<p>$ne !== value</p>\n<p>$in 배열안에 속하는 값</p>\n<p>$nin 배열안에 속하지 않는 값</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install mongoose</code></pre></div>\n<p>몽구스 orm</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span>connection<span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// CONNECTED TO MONGODB SERVER</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Connected to mongod server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>db에 연결하여 연결되었는지를 체크하는 부분</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">mongoose<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb://127.0.0.1:27017/mongodb_tutorial'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  useNewUrlParser<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>현재 나의 mongoDB의 /주소,포트번호/사용할 데이터베이스,{옵션?} 연결하는것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> Schema <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span>Schema<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> userSchema <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">,</span>\n  email<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">,</span>\n  password<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">,</span>\n  phoneNumber<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">,</span>\n  ordered<span class=\"token punctuation\">:</span> Array\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>새로운 스키마를 구성할 때의 쿼리이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">'collection'</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> key<span class=\"token punctuation\">:</span> value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> err<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>찾는 collection의 메소드로 find를 실행하고 찾는 조건을 첫번째 매개변수로, 두번째 매개변수로 callback을 받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span>email <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> password<span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span>phoneNumber <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>phoneNumber<span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span>ordered <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>ordered<span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위에서 만든 스키마를 기준으로 new 연산자를 이용해 회원가입하는 새로운 사람의 정보를 담고 save메소드를 이용해 저장시킨다.</p>\n<p>원래 내용이 더 있지만 지웠다. orm에 집중하기위해 지웠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> password <span class=\"token operator\">=</span> bcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> hash<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>마지막으로 해쉬함수인 bcrypt인데 salt를 몇번 돌릴지와 비밀번호를 담고 password라는 변수에 담았다.</p>\n<p>처음 사용해봤지만 매우 쉬웠다.</p>","fields":{"slug":"/category/til/5/","tagSlugs":["/tag/database/","/tag/mongodb/","/tag/project-1/"]},"frontmatter":{"date":"2019-02-07T22:39","description":"database/mongodb를 공부했다 !","tags":["database","mongodb","project-1"],"title":"TIL-0207"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/category/til/5/"}}